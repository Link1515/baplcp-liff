generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  lineId String @unique
  realName String
  isAdmin Boolean @default(false)
  joinRecordPerSeason JoinRecordPerSeason[]
  joinRecordPerTime JoinRecordPerTime[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  price_pre_time Int
  price_pre_season Int
  activity Activity[]
  joinRecordPerSeason JoinRecordPerSeason[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JoinRecordPerSeason {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  event Event @relation(fields: [eventId], references: [id])
  eventId String @db.ObjectId
  active Boolean
  hasPaid Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Activity {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  event Event @relation(fields: [eventId], references: [id])
  joinRecordPerTime JoinRecordPerTime[]
  eventId String @db.ObjectId
  hasInvited Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JoinRecordPerTime {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  activity Activity @relation(fields: [activityId], references: [id])
  activityId String @db.ObjectId
  active Boolean
  hasPaid Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
