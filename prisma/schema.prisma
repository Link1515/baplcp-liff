generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  lineId String @unique
  realName String
  name String
  avatar String
  isAdmin Boolean @default(false)
  isLineGroupMember Boolean @default(false)
  isChecked Boolean @default(false)
  joinRecordPerSeason JoinRecordPerSeason[]
  joinRecordPerActivity JoinRecordPerActivity[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Season {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  pricePerActivity Int
  enableSeasonPayment Boolean @default(false)
  pricePerSeason Int?
  startDate DateTime
  endDate DateTime
  activityStartTime String 
  activityEndTime String
  activityJoinLimit Int
  activity Activity[]
  joinRecordPerSeason JoinRecordPerSeason[]
  allowedJoin Boolean @default(false)
  allowedJoinDate DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JoinRecordPerSeason {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  season Season @relation(fields: [seasonId], references: [id])
  seasonId String @db.ObjectId
  active Boolean
  hasPaid Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Activity {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  season Season @relation(fields: [seasonId], references: [id])
  seasonId String @db.ObjectId
  date DateTime 
  joinRecordPerActivity JoinRecordPerActivity[]
  allowedJoin Boolean @default(false)
  allowedJoinDate DateTime
  joinDeadline DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JoinRecordPerActivity {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  activity Activity @relation(fields: [activityId], references: [id])
  activityId String @db.ObjectId
  joinedAt DateTime?
  active Boolean @default(true)
  hasPaid Boolean @default(false)
  addBySeason Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Schedule {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  message String
  triggerDateTime DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
